swagger: '2.0'
info:
  description: Uber Backend Api Documentation
  version: '1.0'
  title: Uber Api Documentation
  contact: 
    email: "mohit@scaler.com"
host: 'localhost:8080'
basePath: /
tags:
  - name: driver-controller
    description: Driver Controller
  - name: location-tracking-controller
    description: Location Tracking Controller
  - name: passenger-controller
    description: Passenger Controller
  - name: profile-controller
    description: Profile Controller
paths:
  '/driver/{driverId}':
    get:
      tags:
        - driver-controller
      summary: getDriverDetails
      operationId: getDriverDetailsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: driverId
          in: path
          description: driverId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Driver'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/driver/{driverId}/bookings':
    get:
      tags:
        - driver-controller
      summary: getAllBookings
      operationId: getAllBookingsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: driverId
          in: path
          description: driverId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Booking'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/driver/{driverId}/bookings/{bookingId}':
    get:
      tags:
        - driver-controller
      summary: getBooking
      operationId: getBookingUsingGET
      produces:
        - '*/*'
      parameters:
        - name: bookingId
          in: path
          description: bookingId
          required: true
          type: integer
          format: int64
        - name: driverId
          in: path
          description: driverId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Booking'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - driver-controller
      summary: acceptBooking
      operationId: acceptBookingUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: bookingId
          in: path
          description: bookingId
          required: true
          type: integer
          format: int64
        - name: driverId
          in: path
          description: driverId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - driver-controller
      summary: cancelBooking
      operationId: cancelBookingUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: bookingId
          in: path
          description: bookingId
          required: true
          type: integer
          format: int64
        - name: driverId
          in: path
          description: driverId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/driver/{driverId}/bookings/{bookingId}/end':
    patch:
      tags:
        - driver-controller
      summary: endRide
      operationId: endRideUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: bookingId
          in: path
          description: bookingId
          required: true
          type: integer
          format: int64
        - name: driverId
          in: path
          description: driverId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/driver/{driverId}/bookings/{bookingId}/rate':
    patch:
      tags:
        - driver-controller
      summary: rateRide
      operationId: rateRideUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: bookingId
          in: path
          description: bookingId
          required: true
          type: integer
          format: int64
        - in: body
          name: data
          description: data
          required: true
          schema:
            $ref: '#/definitions/Review'
        - name: driverId
          in: path
          description: driverId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/driver/{driverId}/bookings/{bookingId}/start':
    patch:
      tags:
        - driver-controller
      summary: startRide
      operationId: startRideUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: bookingId
          in: path
          description: bookingId
          required: true
          type: integer
          format: int64
        - name: driverId
          in: path
          description: driverId
          required: true
          type: integer
          format: int64
        - in: body
          name: otp
          description: otp
          required: true
          schema:
            $ref: '#/definitions/OTP'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/location/driver/{driverId}':
    put:
      tags:
        - location-tracking-controller
      summary: updateDriverLocation
      operationId: updateDriverLocationUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: data
          description: data
          required: true
          schema:
            $ref: '#/definitions/ExactLocation'
        - name: driverId
          in: path
          description: driverId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/location/passenger/{passengerId}':
    put:
      tags:
        - location-tracking-controller
      summary: updatePassengerLocation
      operationId: updatePassengerLocationUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: location
          description: location
          required: true
          schema:
            $ref: '#/definitions/ExactLocation'
        - name: passengerId
          in: path
          description: passengerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/passenger/{passengerId}':
    get:
      tags:
        - passenger-controller
      summary: getPassengerDetails
      operationId: getPassengerDetailsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: passengerId
          in: path
          description: passengerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Passenger'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/passenger/{passengerId}/bookings':
    get:
      tags:
        - passenger-controller
      summary: getAllBookings
      operationId: getAllBookingsUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: passengerId
          in: path
          description: passengerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Booking'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/passenger/{passengerId}/bookings/':
    post:
      tags:
        - passenger-controller
      summary: requestBooking
      operationId: requestBookingUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: data
          description: data
          required: true
          schema:
            $ref: '#/definitions/Booking'
        - name: passengerId
          in: path
          description: passengerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/passenger/{passengerId}/bookings/{bookingId}':
    get:
      tags:
        - passenger-controller
      summary: getBooking
      operationId: getBookingUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: bookingId
          in: path
          description: bookingId
          required: true
          type: integer
          format: int64
        - name: passengerId
          in: path
          description: passengerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Booking'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - passenger-controller
      summary: retryBooking
      operationId: retryBookingUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: bookingId
          in: path
          description: bookingId
          required: true
          type: integer
          format: int64
        - name: passengerId
          in: path
          description: passengerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - passenger-controller
      summary: cancelBooking
      operationId: cancelBookingUsingDELETE_1
      produces:
        - '*/*'
      parameters:
        - name: bookingId
          in: path
          description: bookingId
          required: true
          type: integer
          format: int64
        - name: passengerId
          in: path
          description: passengerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - passenger-controller
      summary: updateRoute
      operationId: updateRouteUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: bookingId
          in: path
          description: bookingId
          required: true
          type: integer
          format: int64
        - in: body
          name: data
          description: data
          required: true
          schema:
            $ref: '#/definitions/Booking'
        - name: passengerId
          in: path
          description: passengerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/passenger/{passengerId}/bookings/{bookingId}/rate':
    patch:
      tags:
        - passenger-controller
      summary: rateRide
      operationId: rateRideUsingPATCH_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: bookingId
          in: path
          description: bookingId
          required: true
          type: integer
          format: int64
        - in: body
          name: data
          description: data
          required: true
          schema:
            $ref: '#/definitions/Review'
        - name: passengerId
          in: path
          description: passengerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
definitions:
  Account:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      id:
        type: integer
        format: int64
      password:
        type: string
      roles:
        type: array
        items:
          $ref: '#/definitions/Role'
      updatedAt:
        type: string
        format: date-time
      username:
        type: string
    title: Account
  Booking:
    type: object
    properties:
      bookingStatus:
        type: string
        enum:
          - ASSIGNING_DRIVER
          - CAB_ARRIVED
          - CANCELLED
          - COMPLETED
          - IN_RIDE
          - REACHING_PICKUP_LOCATION
      bookingType:
        type: string
        enum:
          - Go
          - Prime
          - Rental
          - Sedan
          - XL
      completedRoute:
        type: array
        items:
          $ref: '#/definitions/ExactLocation'
      createdAt:
        type: string
        format: date-time
      driver:
        $ref: '#/definitions/Driver'
      endTime:
        type: string
        format: date-time
      expectedCompletionTime:
        type: string
        format: date-time
      id:
        type: integer
        format: int64
      notifiedDrivers:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/Driver'
      paid:
        type: boolean
      passenger:
        $ref: '#/definitions/Passenger'
      reviewByDriver:
        $ref: '#/definitions/Review'
      reviewByPassenger:
        $ref: '#/definitions/Review'
      rideStartOTP:
        $ref: '#/definitions/OTP'
      route:
        type: array
        items:
          $ref: '#/definitions/ExactLocation'
      startTime:
        type: string
        format: date-time
      totalDistanceMeters:
        type: integer
        format: int64
      updatedAt:
        type: string
        format: date-time
    title: Booking
  Car:
    type: object
    properties:
      brandAndModel:
        type: string
      carType:
        type: string
        enum:
          - Normal
          - Sedan
          - XL
      color:
        $ref: '#/definitions/Color'
      createdAt:
        type: string
        format: date-time
      driver:
        $ref: '#/definitions/Driver'
      id:
        type: integer
        format: int64
      plateNumber:
        type: string
      updatedAt:
        type: string
        format: date-time
    title: Car
  Color:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      id:
        type: integer
        format: int64
      name:
        type: string
      updatedAt:
        type: string
        format: date-time
    title: Color
  Driver:
    type: object
    properties:
      acceptableBookings:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/Booking'
      account:
        $ref: '#/definitions/Account'
      activeBooking:
        $ref: '#/definitions/Booking'
      activeCity:
        type: string
        enum:
          - BANGALORE
          - CALCUTTA
          - CHENNAI
          - DELHI
          - GOA
          - MUMBAI
      approvalStatus:
        type: string
        enum:
          - APPROVED
          - DENIED
          - PENDING
      avgRating:
        $ref: '#/definitions/Review'
      bookings:
        type: array
        items:
          $ref: '#/definitions/Booking'
      car:
        $ref: '#/definitions/Car'
      createdAt:
        type: string
        format: date-time
      dob:
        type: string
        format: date-time
      gender:
        type: string
        enum:
          - FEMALE
          - MALE
      home:
        $ref: '#/definitions/ExactLocation'
      id:
        type: integer
        format: int64
      lastKnownLocation:
        $ref: '#/definitions/ExactLocation'
      licenseDetails:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
      updatedAt:
        type: string
        format: date-time
    title: Driver
  ExactLocation:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      id:
        type: integer
        format: int64
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      updatedAt:
        type: string
        format: date-time
    title: ExactLocation
  OTP:
    type: object
    properties:
      code:
        type: string
      createdAt:
        type: string
        format: date-time
      id:
        type: integer
        format: int64
      sentToNumber:
        type: string
      updatedAt:
        type: string
        format: date-time
    title: OTP
  Passenger:
    type: object
    properties:
      account:
        $ref: '#/definitions/Account'
      activeBooking:
        $ref: '#/definitions/Booking'
      avgRating:
        $ref: '#/definitions/Review'
      bookings:
        type: array
        items:
          $ref: '#/definitions/Booking'
      createdAt:
        type: string
        format: date-time
      dob:
        type: string
        format: date-time
      gender:
        type: string
        enum:
          - FEMALE
          - MALE
      home:
        $ref: '#/definitions/ExactLocation'
      id:
        type: integer
        format: int64
      lastKnownLocation:
        $ref: '#/definitions/ExactLocation'
      name:
        type: string
      phoneNumber:
        type: string
      updatedAt:
        type: string
        format: date-time
      work:
        $ref: '#/definitions/ExactLocation'
    title: Passenger
  Review:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      id:
        type: integer
        format: int64
      note:
        type: string
      ratingOutOfFive:
        type: integer
        format: int32
      updatedAt:
        type: string
        format: date-time
    title: Review
  Role:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      description:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      updatedAt:
        type: string
        format: date-time
    title: Role